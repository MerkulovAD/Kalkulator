import tkinter as tk
import json

class ToDoList(tk.Frame):
    def __init__(self, master=None):
        super().__init__(master)
        self.master = master
        self.master.protocol("WM_DELETE_WINDOW", self.on_closing)
        self.load_tasks()
        self.create_widgets()
        self.pack()

    def create_widgets(self):
        self.task_entry = tk.Entry(self.master)
        self.task_entry.pack()

        self.add_button = tk.Button(self.master, text="Add Task", command=self.add_task)
        self.add_button.pack()

        self.delete_button = tk.Button(self.master, text="Delete Task", command=self.delete_task)
        self.delete_button.pack()

        self.delete_all_button = tk.Button(self.master, text="Delete All Tasks", command=self.delete_all_tasks)
        self.delete_all_button.pack()

        self.task_listbox = tk.Listbox(self.master)
        for task in self.tasks:
            self.task_listbox.insert(tk.END, task)
        self.task_listbox.pack()

    def add_task(self):
        task = self.task_entry.get()
        if task.strip() != "":
            self.task_listbox.insert(tk.END, task)
            self.tasks.append(task)
            self.save_tasks()
            self.task_entry.delete(0, tk.END)

    def delete_task(self):
        selected_task = self.task_listbox.curselection()
        if selected_task:
            index = selected_task[0]
            task = self.task_listbox.get(index)
            self.task_listbox.delete(index)
            self.tasks.remove(task)
            self.save_tasks()

    def delete_all_tasks(self):
        self.task_listbox.delete(0, tk.END)
        self.tasks.clear()
        self.save_tasks()

    def load_tasks(self):
        try:
            with open("tasks.json", "r") as f:
                self.tasks = json.load(f)
        except FileNotFoundError:
            self.tasks = []

    def save_tasks(self):
        with open("tasks.json", "w") as f:
            json.dump(self.tasks, f)

    def on_closing(self):
        self.save_tasks()
        self.master.destroy()

root = tk.Tk()
app = ToDoList(master=root)
app.mainloop()
